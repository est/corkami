#summary Preserving arcade games

*Preserving arcade games* was presented at Recon, T2, Area41, !NuitDuHack, !RaumZeitLabor, CCC and other locations.

=Abstract=
_Old-school arcade games were so protected that hacking is the only way to preserve them before all boards are dead, and the games are lost._

 * an overview of famous old-school arcade games
 * their incredible hardware
 * the permanent piracy
 * the awesome protections (designed to commit suicide !)
 * what was required to preserve some of them from being lost for ever.

This talk is a homage to Michael Steil's Ultimate Commodore 64 presentation at 25c3: you should watch it, it's inspiring in content and quality !

=Contents= 
The slide deck initially started as pure b&w text, then evolved to pictures only, and lastly fully animated with custom recorded (some are tools-assisted) lossless videos, presented via a tweaked version of [http://advancemame.sourceforge.net/menu-readme.html AdvanceMenu] (an arcade frontend) (_full deck download soon_)

Why? This talk was rejected a lot - often without even an answer despite requests - so I just kept improving it anyway :)

Please give me feedback [http://events.ccc.de/congress/2014/Fahrplan/events/5997.html here].

The best version was presented at the CCC ([http://media.ccc.de/browse/congress/2014/31c3_-_5997_-_en_-_saal_6_-_201412282030_-_preserving_arcade_games_-_ange_albertini.html hi-res video + download])

 <wiki:video url="https://www.youtube.com/watch?v=2q_qXGIj-jg"/>

A static version of the slides is [https://speakerdeck.com/ange/preserving-arcade-games-31c3 available as PDF], viewable online and directly downloadable.

You can download the full animated presentation (~1Gb) with extras on [https://archive.org/details/arcade31c3 archive.org].

An extended version (more details) is also available
 <wiki:video url="https://www.youtube.com/watch?v=LiRIc0LDlu4"/>

=extra=
you can find [http://pics.corkami.com here] some hi-res version of some of the slides (facepalm, timeline)
http://i.imgur.com/PJbYtpB.png

The Q&A screensaver uses !AdvanceMenu and the video set from its [http://advancemame.sourceforge.net/menu-download.html website] (6 Gb)

=tricks=
 * images
  * original slides from the first PDF version were converted to PNG via [http://www.imagemagick.org/script/command-line-options.php#density ImageMagick + "-density parameter"]
 * video
  # create your own video / download video via [http://rg3.github.io/youtube-dl/ youtube-dl]
  # extract all/specific frames as PNG via [http://www.mplayerhq.hu/design7/news.html MPlayer]
  # manipulate frames via imagemagick (crop, colors, perspective...)
  # reencode via [http://advancemame.sourceforge.net/doc-advmng.html advmng]
 * mame recording
  # save game just before recording position
  # restart Mame and record audio & video via Mame's _mngwrite_ & _wavwrite_ option, load savegame
  # trim start on both MNG & WAV via [http://corkami.googlecode.com/svn/trunk/misc/python/trimmer.py this script] (only works before any advmng-specific compression)
  # audio levelling via replaygain
 * or use !AdvanceMame direct MNG + WAV recording

 * Tools assisted videos: [https://code.google.com/p/mame-rr/downloads/list Mame-RR] with [https://code.google.com/p/macrolua/wiki/MacroLuaDocumentation MacroLua] and my [https://code.google.com/p/corkami/source/browse/trunk/misc/tas/?r=1750 inputs scripts]

 * some videos were 'cleaned' at emulation level to prevent the display of some specific tiles (if you have a better solution, let me know!)
  * used !WinKawaks Shot Factory to identify the tiles more easily (blinking state)
  * patched tiles functions in Mame & recompile.
 
 * compression
  * pngout, advpng, advmng

 * !AdvanceMenu works better under Wine for correct playback.
  * the configuration was tweaked so that it's as big as possible on screen (it's still windowed)
  * taskbar color is set to black, W8 settings "Prevent windows from being automatically arranged when moved to the edge of the screen" mus be disabled.
  * a patch to prevent !AdvanceMenu to restart at the first frame was implemented by Philippe Teuwen. Because the official build couldn't compile under Windows at the time, I did a crossplatform diff patch on the official Windows binary
  

=ack= 
Thanks to everyone who could make this presentation possible (Raz, Andreas, Charles, Dave, Phil), and to anyone who made preservation possible, and in particular CPS2.