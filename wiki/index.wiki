#summary index page the wiki

====[About about Corkami] (this project is done in my spare time. [About#Support_Corkami Support] it!)====

<wiki:gadget url="https://corkami.googlecode.com/svn/wiki/gadgets/twitter_corkami.xml" width=700 border=0/>

<wiki:toc max_depth="1" />

=Portable Executable=
 * *presentation* first at Hack In Paris, then reworked and extended at !HashDays
  # [HackInParis2012 a bit more of PE], presented at Hack in Paris, on the 22nd June 2012 <wiki:gadget url="https://corkami.googlecode.com/svn/wiki/gadgets/hip2012_subs.xml" width=620 height=405 border=0/>
  # [hashdays2012 Binary Art - byte-ing the PE that fails you], presented at Hashdays, Luzern, on the 3rd November 2012
  <wiki:gadget url="https://corkami.googlecode.com/svn/wiki/gadgets/hashdays2012_slideshare.xml" width=595 height=497 border=0/>
 * *poster* [PE101 PE 101] - a windows executable walkthrough
  https://corkami.googlecode.com/svn/wiki/pics/pe101_thumb.jpg
 * *article with !PoCs* [PE the PE format]
   <wiki:gadget url=https://corkami.googlecode.com/svn/wiki/gadgets/flash.xml up_File=https://corkami.googlecode.com/svn/wiki/pics/wink/PE_virtEP.swf up_FlashHeight=268 up_FlashWidth=358 up_ContainerCol="#d1dae3" height=268 width=358 title="" border=0/>
 * *!PoCs* [http://code.google.com/p/corkami/downloads/list?can=1&q=Binary+corpus Binary corpus] is a group of non malicious binaries, exhibiting various file formats, and more specifically, aspects of PE files.
  * Formats: NE, PE, Elf, LX, LE, COM, EXE
  * Compilers: Digital Mars C, Lcc, Masm, Tasm, !FreeBasic, !FreePascal, !OpenWatcom, Fasm, !GoAsm...
  * PE:
   * sections: none, 16 (legitimate), 199 (maximum), duplicate, PE-mapping, wrong order...
   * Misc: Tiny PE, !EntryPoint (on 2nd section, external), no !ImageBase...
   * Directories: none, !DelayImports, Bound Imports, !LoadConfig Directory, Copyright directory, COM directory, TLS (Empty/normal/Fake/External), Resource (recursive)....
 * [http://code.google.com/p/corkami/downloads/detail?name=pe-20110117.pdf PE file format] (file & memory layout, headers, data directories)

=x86/x64 assembly=
 * *presentation* x86 & PE: first presented and recorded at Hashdays, then improved at !BerlinSides
  # [http://code.google.com/p/corkami/wiki/hashdays2011 Hashdays 2011]: Such a weird processor - messing with opcodes (...and a little bit of PE) (28th October 2011) <wiki:gadget url="https://corkami.googlecode.com/svn/wiki/gadgets/hashdays2011_subs.xml" width=620 height=405 border=0/>
  # [http://code.google.com/p/corkami/wiki/BerlinSidesX2 BerlinSides x2]: x86 & PE (28th December 2011) - with demo as [http://code-opensocial.googleusercontent.com/gadgets/ifr?url=https%3A%2F%2Fcorkami.googlecode.com%2Fsvn%2Ftrunk%2Fpics%2Fbsx2%2Fbsx2.xml&parent=%2F%2Fcode.google.com%2Fhosting&container=code#slide42 screencasts]
 * *article* [http://code.google.com/p/corkami/wiki/x86oddities?wl=en x86 oddities]
  * *PoC* [StandardTest Corkami Standard Test], a PE/x86/x64 test program for your tools/emulators/skills. http://corkami.googlecode.com/svn/wiki/pics/x86_96b.gif
 * *article* how to [http://code.google.com/p/corkami/wiki/GetIP get the current IP]
 * *article* [InitialValues values of general and system registers]  on TLS/!EntryPoint/... of most Windows versions, Wine, etc..
 * *article* [CallingConventions Calling conventions, seen from ASM]
 * *doc* [http://code.google.com/p/corkami/downloads/detail?name=opcodes.pdf Opcodes] (x86 & x64 simplified tables, one-liners)
  http://corkami.googlecode.com/svn/wiki/pics/opcodes_thumb.jpg
 * *related doc*: a very nice and simple [http://net.cs.uni-bonn.de/fileadmin/user_upload/plohmann/x86_opcode_structure_and_instruction_overview.pdf opcode table], by [http://pnx.tf Daniel Plohmann]

=PDF=
 * *article with !PoCs* [http://code.google.com/p/corkami/wiki/PDFTricks?wl=en a summary of PDF tricks] - encodings, structures, !JavaScript... ([http://code.google.com/p/corkami/wiki/PDFTricks?wl=fr Français] [http://code.google.com/p/corkami/wiki/PDFTricks?wl=ja 日本語])
 https://corkami.googlecode.com/svn/wiki/pics/pdf_js.png

=packers=
 * *!PoCs* [http://code.google.com/p/corkami/downloads/list?can=1&q=mini_packers categories]: patcher, protecter, crypter, compresser, mutater, virtualizer
 * *!PoCs* [http://code.google.com/p/corkami/downloads/list?can=1&q=crypters_algos crypters algos]: xor, prng, rc4
 * *!PoCs* [http://code.google.com/p/corkami/downloads/list?can=1&q=fibo architectures of virtualization]: standard, stack, [http://en.wikipedia.org/wiki/One_instruction_set_computer#Subtract_and_branch_if_less_than_or_equal_to_zero SubLeq], [http://en.wikipedia.org/wiki/One_instruction_set_computer#Transport_triggered_architecture TTA]
 * *source* a [http://corkami.googlecode.com/svn/trunk/misc/MakePE/examples/packer/aplib.py one-file] aPLib compression/decompression in python
 * *!PoCs* imports [http://code.google.com/p/corkami/downloads/list?can=1&q=imports_loading loading] [http://code.google.com/p/corkami/downloads/list?can=1&q=imports_obfuscation obfuscation]
 * *!PoCs* [http://code.google.com/p/corkami/downloads/list?can=2&q=strings string encodings]
 * *toolkit* [http://code.google.com/p/corkami/downloads/list?can=1&q=user-mode+drivers a toolkit] to run drivers in user-mode, and unpack them directly from !OllyDbg
 * *doc* [http://code.google.com/p/corkami/downloads/detail?name=cm.pdf anti-debugs]
 * *doc* [http://code.google.com/p/corkami/downloads/detail?name=packers.pdf packers] (models, categories & features, landscape, detailed features, entrypoints, algorithms)
  http://corkami.googlecode.com/svn/wiki/pics/packers_thumb.jpg

=misc=
 * *doc* [OpcodesTables Opcodes' tables] of Java, .Net, Android, x86 - as either compact single-page cheat sheets, or full descriptive posters.
  http://corkami.googlecode.com/svn/wiki/pics/tables_thumb.jpg
 * *article with !PoCs* [Encodings curious encodings]
  https://corkami.googlecode.com/svn/wiki/pics/misc_aa86.png
 * [IntroductionToVirus Explaining what’s a computer virus to grandma]
 * *PoC* [http://code.google.com/p/corkami/downloads/list?can=1&q=kernel31 Kernel31], a trampoline DLL to enable >!XpSp3 binaries work on previous OS.
 * old crackmes solutions: PredatorPirupiru LilcwXor
 * *screencast* [https://sites.google.com/site/corkami/ollydbg-tracing OllyDbg Tracing] (easy level) setting !OllyDbg as a JIT debugger, tracing, optimizing tracing, finding bug, patching, saving as a new executable
 * *screencast* [http://rejava.sourceforge.net/hello.html reJava] create a .class from scratch

===more===
...for more information, check the (old) [http://corkami.blogspot.com/p/map.html blog map], and the [http://code.google.com/p/corkami/downloads/list downloads tab].

==support Corkami==
to show your support, you can buy special or customized editions of my work, or just donate, via [About#Support_Corkami the support page]